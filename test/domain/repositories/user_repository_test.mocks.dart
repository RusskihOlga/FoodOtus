// Mocks generated by Mockito 5.3.2 from annotations
// in food_otus/test/domain/repositories/user_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:food_otus/core/client.dart' as _i3;
import 'package:food_otus/core/database.dart' as _i2;
import 'package:food_otus/data/data_sources/user_local_source.dart' as _i5;
import 'package:food_otus/data/data_sources/user_remote_source.dart' as _i7;
import 'package:food_otus/data/models/network/result_json.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResultJson_2 extends _i1.SmartFake implements _i4.ResultJson {
  _FakeResultJson_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalSource extends _i1.Mock implements _i5.UserLocalSource {
  MockUserLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Database get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabase_0(
          this,
          Invocation.getter(#database),
        ),
      ) as _i2.Database);
  @override
  _i6.Future<void> addUser(
    String? login,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [
            login,
            password,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<bool> authUser(
    String? login,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #authUser,
          [
            login,
            password,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [UserRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteSource extends _i1.Mock implements _i7.UserRemoteSource {
  MockUserRemoteSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Client);
  @override
  _i6.Future<_i4.ResultJson> signIn(
    String? login,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            login,
            password,
          ],
        ),
        returnValue: _i6.Future<_i4.ResultJson>.value(_FakeResultJson_2(
          this,
          Invocation.method(
            #signIn,
            [
              login,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i4.ResultJson>);
  @override
  _i6.Future<_i4.ResultJson> signUp(
    String? login,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            login,
            password,
          ],
        ),
        returnValue: _i6.Future<_i4.ResultJson>.value(_FakeResultJson_2(
          this,
          Invocation.method(
            #signUp,
            [
              login,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i4.ResultJson>);
}
