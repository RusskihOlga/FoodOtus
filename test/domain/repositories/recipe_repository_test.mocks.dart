// Mocks generated by Mockito 5.3.2 from annotations
// in food_otus/test/domain/repositories/recipe_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;

import 'package:food_otus/core/client.dart' as _i9;
import 'package:food_otus/core/database.dart' as _i2;
import 'package:food_otus/data/data_sources/recipe_local_source.dart' as _i12;
import 'package:food_otus/data/data_sources/recipe_remote_source.dart' as _i20;
import 'package:food_otus/data/models/db/detector_db.dart' as _i8;
import 'package:food_otus/data/models/db/ingredient_db.dart' as _i4;
import 'package:food_otus/data/models/db/measure_unit_db.dart' as _i6;
import 'package:food_otus/data/models/db/photo_db.dart' as _i7;
import 'package:food_otus/data/models/db/recipe_db.dart' as _i3;
import 'package:food_otus/data/models/db/step_db.dart' as _i5;
import 'package:food_otus/data/models/network/favorite_json.dart' as _i11;
import 'package:food_otus/data/models/network/ingredient_json.dart' as _i14;
import 'package:food_otus/data/models/network/measure_unit_json.dart' as _i16;
import 'package:food_otus/data/models/network/recipe_ingridient.dart' as _i15;
import 'package:food_otus/data/models/network/recipe_json.dart' as _i10;
import 'package:food_otus/data/models/network/recipe_step_json.dart' as _i18;
import 'package:food_otus/data/models/network/step_json.dart' as _i17;
import 'package:food_otus/domain/entities/detector_data.dart' as _i19;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecipeDB_1 extends _i1.SmartFake implements _i3.RecipeDB {
  _FakeRecipeDB_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIngredientDB_2 extends _i1.SmartFake implements _i4.IngredientDB {
  _FakeIngredientDB_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStepDB_3 extends _i1.SmartFake implements _i5.StepDB {
  _FakeStepDB_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMeasureUnitDB_4 extends _i1.SmartFake implements _i6.MeasureUnitDB {
  _FakeMeasureUnitDB_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhotoDB_5 extends _i1.SmartFake implements _i7.PhotoDB {
  _FakePhotoDB_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetectorDB_6 extends _i1.SmartFake implements _i8.DetectorDB {
  _FakeDetectorDB_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_7 extends _i1.SmartFake implements _i9.Client {
  _FakeClient_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecipeJson_8 extends _i1.SmartFake implements _i10.RecipeJson {
  _FakeRecipeJson_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFavoriteJson_9 extends _i1.SmartFake implements _i11.FavoriteJson {
  _FakeFavoriteJson_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RecipeLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeLocalSource extends _i1.Mock implements _i12.RecipeLocalSource {
  MockRecipeLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Database get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabase_0(
          this,
          Invocation.getter(#database),
        ),
      ) as _i2.Database);
  @override
  _i13.Future<_i3.RecipeDB> addRecipe(
    _i10.RecipeJson? recipe,
    int? favorite,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRecipe,
          [
            recipe,
            favorite,
          ],
        ),
        returnValue: _i13.Future<_i3.RecipeDB>.value(_FakeRecipeDB_1(
          this,
          Invocation.method(
            #addRecipe,
            [
              recipe,
              favorite,
            ],
          ),
        )),
      ) as _i13.Future<_i3.RecipeDB>);
  @override
  List<_i3.RecipeDB> getRecipes({bool? favorite = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipes,
          [],
          {#favorite: favorite},
        ),
        returnValue: <_i3.RecipeDB>[],
      ) as List<_i3.RecipeDB>);
  @override
  List<_i4.IngredientDB> getIngredients(int? recipe) => (super.noSuchMethod(
        Invocation.method(
          #getIngredients,
          [recipe],
        ),
        returnValue: <_i4.IngredientDB>[],
      ) as List<_i4.IngredientDB>);
  @override
  void updateFavorite(
    int? id,
    int? favorite,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFavorite,
          [
            id,
            favorite,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.RecipeDB? getRecipe(int? id) => (super.noSuchMethod(Invocation.method(
        #getRecipe,
        [id],
      )) as _i3.RecipeDB?);
  @override
  List<_i7.PhotoDB> getPhotos(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getPhotos,
          [id],
        ),
        returnValue: <_i7.PhotoDB>[],
      ) as List<_i7.PhotoDB>);
  @override
  _i13.Future<_i4.IngredientDB> addIngredient(
    _i14.IngredientJson? ingredient,
    _i15.RecipeIngredientJson? recipeIngredient,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addIngredient,
          [
            ingredient,
            recipeIngredient,
          ],
        ),
        returnValue: _i13.Future<_i4.IngredientDB>.value(_FakeIngredientDB_2(
          this,
          Invocation.method(
            #addIngredient,
            [
              ingredient,
              recipeIngredient,
            ],
          ),
        )),
      ) as _i13.Future<_i4.IngredientDB>);
  @override
  _i13.Future<void> addMeasureUnit(_i16.MeasureUnitJson? measureUnit) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMeasureUnit,
          [measureUnit],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);
  @override
  _i13.Future<_i5.StepDB> addStep(
    _i17.StepJson? step,
    _i18.RecipeStepJson? recipeStep,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addStep,
          [
            step,
            recipeStep,
          ],
        ),
        returnValue: _i13.Future<_i5.StepDB>.value(_FakeStepDB_3(
          this,
          Invocation.method(
            #addStep,
            [
              step,
              recipeStep,
            ],
          ),
        )),
      ) as _i13.Future<_i5.StepDB>);
  @override
  _i6.MeasureUnitDB getMeasureUnit(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getMeasureUnit,
          [id],
        ),
        returnValue: _FakeMeasureUnitDB_4(
          this,
          Invocation.method(
            #getMeasureUnit,
            [id],
          ),
        ),
      ) as _i6.MeasureUnitDB);
  @override
  _i13.Future<_i7.PhotoDB> addPhoto(
    String? path,
    List<_i8.DetectorDB>? detectors,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPhoto,
          [
            path,
            detectors,
          ],
        ),
        returnValue: _i13.Future<_i7.PhotoDB>.value(_FakePhotoDB_5(
          this,
          Invocation.method(
            #addPhoto,
            [
              path,
              detectors,
            ],
          ),
        )),
      ) as _i13.Future<_i7.PhotoDB>);
  @override
  _i13.Future<_i8.DetectorDB> addDetector(_i19.DetectorData? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDetector,
          [data],
        ),
        returnValue: _i13.Future<_i8.DetectorDB>.value(_FakeDetectorDB_6(
          this,
          Invocation.method(
            #addDetector,
            [data],
          ),
        )),
      ) as _i13.Future<_i8.DetectorDB>);
  @override
  List<_i8.DetectorDB> getDetectors(String? path) => (super.noSuchMethod(
        Invocation.method(
          #getDetectors,
          [path],
        ),
        returnValue: <_i8.DetectorDB>[],
      ) as List<_i8.DetectorDB>);
}

/// A class which mocks [RecipeRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeRemoteSource extends _i1.Mock
    implements _i20.RecipeRemoteSource {
  MockRecipeRemoteSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_7(
          this,
          Invocation.getter(#client),
        ),
      ) as _i9.Client);
  @override
  _i13.Future<List<_i10.RecipeJson>> getRecipes() => (super.noSuchMethod(
        Invocation.method(
          #getRecipes,
          [],
        ),
        returnValue:
            _i13.Future<List<_i10.RecipeJson>>.value(<_i10.RecipeJson>[]),
      ) as _i13.Future<List<_i10.RecipeJson>>);
  @override
  _i13.Future<List<_i16.MeasureUnitJson>> getMeasureUnits() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMeasureUnits,
          [],
        ),
        returnValue: _i13.Future<List<_i16.MeasureUnitJson>>.value(
            <_i16.MeasureUnitJson>[]),
      ) as _i13.Future<List<_i16.MeasureUnitJson>>);
  @override
  _i13.Future<List<_i14.IngredientJson>> getIngredients() =>
      (super.noSuchMethod(
        Invocation.method(
          #getIngredients,
          [],
        ),
        returnValue: _i13.Future<List<_i14.IngredientJson>>.value(
            <_i14.IngredientJson>[]),
      ) as _i13.Future<List<_i14.IngredientJson>>);
  @override
  _i13.Future<List<_i15.RecipeIngredientJson>> getRecipeIngredients() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipeIngredients,
          [],
        ),
        returnValue: _i13.Future<List<_i15.RecipeIngredientJson>>.value(
            <_i15.RecipeIngredientJson>[]),
      ) as _i13.Future<List<_i15.RecipeIngredientJson>>);
  @override
  _i13.Future<List<_i17.StepJson>> getSteps() => (super.noSuchMethod(
        Invocation.method(
          #getSteps,
          [],
        ),
        returnValue: _i13.Future<List<_i17.StepJson>>.value(<_i17.StepJson>[]),
      ) as _i13.Future<List<_i17.StepJson>>);
  @override
  _i13.Future<List<_i18.RecipeStepJson>> getStepsLink() => (super.noSuchMethod(
        Invocation.method(
          #getStepsLink,
          [],
        ),
        returnValue: _i13.Future<List<_i18.RecipeStepJson>>.value(
            <_i18.RecipeStepJson>[]),
      ) as _i13.Future<List<_i18.RecipeStepJson>>);
  @override
  _i13.Future<_i10.RecipeJson> getRecipe(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getRecipe,
          [id],
        ),
        returnValue: _i13.Future<_i10.RecipeJson>.value(_FakeRecipeJson_8(
          this,
          Invocation.method(
            #getRecipe,
            [id],
          ),
        )),
      ) as _i13.Future<_i10.RecipeJson>);
  @override
  _i13.Future<List<_i11.FavoriteJson>> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue:
            _i13.Future<List<_i11.FavoriteJson>>.value(<_i11.FavoriteJson>[]),
      ) as _i13.Future<List<_i11.FavoriteJson>>);
  @override
  _i13.Future<_i11.FavoriteJson> addFavorite(
    int? recipe,
    int? user,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [
            recipe,
            user,
          ],
        ),
        returnValue: _i13.Future<_i11.FavoriteJson>.value(_FakeFavoriteJson_9(
          this,
          Invocation.method(
            #addFavorite,
            [
              recipe,
              user,
            ],
          ),
        )),
      ) as _i13.Future<_i11.FavoriteJson>);
  @override
  _i13.Future<void> removeFavorite(int? favorite) => (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [favorite],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);
}
